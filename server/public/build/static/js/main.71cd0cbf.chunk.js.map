{"version":3,"sources":["assets/defaultposter.png","services/CommonTypes.ts","pages/Home.tsx","components/MovieTable.tsx","services/MovieService.ts","redux/actions/MovieAction.ts","pages/Movie/MovieList.tsx","components/ImgUploader.tsx","components/MovieForm.tsx","pages/Movie/AddMovie.tsx","pages/Movie/EditMovie.tsx","pages/Layout.tsx","redux/reducers/MovieReducer.ts","redux/reducers/RootReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","SwitchType","React","Component","this","props","onLoad","p","style","padding","width","marginBottom","display","value","condition","key","onChange","e","onKeyChange","target","onPressEnter","onSearch","type","icon","size","marginRight","onClick","title","dataIndex","render","poster","redux","className","src","alt","defaultposterImg","filterDropdown","getFilterDropDown","bind","filterIcon","filtered","color","undefined","text","join","filmLength","isHot","record","checked","newVal","onSwitchChange","_id","isComing","isClassics","id","to","onConfirm","a","async","onDelete","message","success","okText","cancelText","total","current","page","pageSize","limit","pagination","rowKey","dataSource","data","columns","getColumns","getPageConfig","handleChange","loading","spinning","isLoading","indicator","tip","MovieService","movie","axios","post","put","delete","get","params","saveMoviesAction","movies","payload","setLoadingAction","setConditionAction","deleteAction","changeSwitchAction","fetchMovies","dispatch","getState","curCondition","getMovies","resp","deleteMovie","changeSwitch","edit","MovieContanier","connect","state","MovieAction","newState","newPage","HOC","MovieTable","showModal","uid","name","url","formData","FormData","append","filename","file","console","log","request","Request","action","method","body","fetch","then","json","err","error","visible","footer","onCancel","setState","accept","listType","fileList","getFileList","customRequest","handleRequest","onRemove","onPreview","getUploadContent","formItemLayout","labelCol","span","wrapperCol","AllAreas","label","AreaGroup","Checkbox","Group","AllTypes","TypeGroup","MovieForm","preventDefault","form","validateFields","errors","getFieldsValue","onSubmit","result","history","push","getFieldDecorator","handleSubmit","Item","rules","required","options","min","step","initialValue","valuePropName","TextArea","offset","htmlType","withRouter","Form","create","mapPropsToFields","obj","createFormField","getDefaultField","add","getMovieById","match","Header","Layout","Sider","Content","_Layout","mode","theme","path","component","Home","exact","MovieList","AddMovie","EditMovie","defaultState","totalPage","saveMovie","Math","ceil","setCondition","setLoading","filter","m","find","d","newMovie","newData","map","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.71cd0cbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultposter.b4e877ba.png\";","export interface IResponseError {\r\n  err: string,\r\n  data: null\r\n}\r\n\r\nexport interface IResponseData<T> {\r\n  err: \"\",\r\n  data: T\r\n}\r\n\r\nexport interface IResponsePageData<T> {\r\n  err: \"\",\r\n  total: number,\r\n  data: T[]\r\n}\r\n\r\nexport interface ISearchCondition {\r\n  page?: number\r\n  limit?: number\r\n  key?: string\r\n}\r\n\r\nexport enum SwitchType {\r\n  isHot = \"isHot\",\r\n  isComing = \"isComing\",\r\n  isClassics = \"isClassics\"\r\n}","import React from \"react\";\r\n\r\nexport default class extends React.Component {\r\n  render() {\r\n    return (\r\n      <h1>\r\n        欢迎使用电影管理系统\r\n      </h1>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { IMovieState } from \"../redux/reducers/MovieReducer\";\r\nimport { Table, Switch, Button, message, Popconfirm, Spin, Icon, Input } from \"antd\";\r\nimport { ColumnProps, PaginationConfig } from \"antd/lib/table\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport defaultposterImg from \"../assets/defaultposter.png\"\r\nimport { SwitchType } from \"../services/CommonTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport interface IMovieTableEvents {\r\n  /**\r\n   * 完成加载之后的事件\r\n   */\r\n  onLoad: () => void;\r\n  onSwitchChange: (type: SwitchType, newState: boolean, id: string) => void;\r\n  onDelete: (id: string) => Promise<void>;\r\n  onChange: (newPage: number) => void;\r\n  onKeyChange: (key: string) => void;\r\n  onSearch: () => void;\r\n}\r\n\r\n\r\nexport default class extends React.Component<IMovieState & IMovieTableEvents> {\r\n  componentDidMount() {\r\n    if (this.props.onLoad) {\r\n      this.props.onLoad()\r\n    }\r\n  }\r\n\r\n  private getFilterDropDown(p: Object) {\r\n    return (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          value={this.props.condition.key}\r\n          onChange={e => this.props.onKeyChange(e.target.value)}\r\n          onPressEnter={this.props.onSearch}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n          onClick={this.props.onSearch}\r\n        >\r\n          搜索\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          style={{ width: 90 }}\r\n          onClick={() => {\r\n            this.props.onKeyChange(\"\");\r\n            this.props.onSearch()\r\n          }}>\r\n          重置\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  private getColumns(): ColumnProps<IMovie>[] {\r\n    return [\r\n      {\r\n        title: \"海报\", dataIndex: \"poster\", render: (poster, redux) => {\r\n          if (poster) {\r\n            return <img className=\"tablePoster\" src={poster} alt=\"\" />\r\n          } else {\r\n            return <img className=\"tablePoster\" src={defaultposterImg} alt=\"\" />\r\n          }\r\n\r\n        }\r\n      },\r\n      {\r\n        title: \"名称\", dataIndex: \"name\",\r\n        filterDropdown: this.getFilterDropDown.bind(this),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n      },\r\n      {\r\n        title: \"地区\", dataIndex: \"areas\", render: (text: string[]) => {\r\n          return text.join(\"，\");\r\n        }\r\n      },\r\n      {\r\n        title: \"类型\", dataIndex: \"types\", render: (text: string[]) => {\r\n          return text.join(\"，\");\r\n        }\r\n      },\r\n      {\r\n        title: \"时长\", dataIndex: \"filmLength\", render: filmLength => {\r\n          return filmLength + \"分钟\";\r\n        }\r\n      },\r\n      {\r\n        title: \"正在热映\", dataIndex: \"isHot\", render: (isHot, record) => {\r\n          return <Switch checked={isHot} onChange={(newVal) => {\r\n            this.props.onSwitchChange(SwitchType.isHot, newVal, record._id!);\r\n          }} />;\r\n        }\r\n      },\r\n      {\r\n        title: \"即将上映\", dataIndex: \"isComing\", render: (isComing, record) => {\r\n          return <Switch checked={isComing} onChange={(newVal) => {\r\n            this.props.onSwitchChange(SwitchType.isComing, newVal, record._id!);\r\n          }} />;\r\n        }\r\n      },\r\n      {\r\n        title: \"经典影片\", dataIndex: \"isClassics\", render: (isClassics, record) => {\r\n          return <Switch checked={isClassics} onChange={(newVal) => {\r\n            this.props.onSwitchChange(SwitchType.isClassics, newVal, record._id!);\r\n          }} />;\r\n        }\r\n      },\r\n      {\r\n        title: \"操作\", dataIndex: \"_id\", render: (id: string) => {\r\n          return (\r\n            <div>\r\n              <NavLink to={\"/movie/edit/\" + id}>\r\n                <Button type=\"primary\" size=\"small\">编辑</Button>\r\n              </NavLink>\r\n              <Popconfirm\r\n                title=\"确定删除吗?\"\r\n                onConfirm={async () => {\r\n                  await this.props.onDelete(id);\r\n                  message.success(\"删除成功\");\r\n                }}\r\n                okText=\"确定\"\r\n                cancelText=\"取消\"\r\n              >\r\n                <Button type=\"danger\" size=\"small\">删除</Button>\r\n              </Popconfirm>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  getPageConfig(): PaginationConfig | false {\r\n    if (this.props.total === 0) {\r\n      return false\r\n    }\r\n    return {\r\n      current: this.props.condition.page,\r\n      pageSize: this.props.condition.limit,\r\n      total: this.props.total\r\n    }\r\n  }\r\n\r\n  handleChange(pagination: PaginationConfig) {\r\n    this.props.onChange(pagination.current!)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        rowKey=\"_id\"\r\n        dataSource={this.props.data}\r\n        columns={this.getColumns()}\r\n        pagination={this.getPageConfig()}\r\n        onChange={this.handleChange.bind(this)}\r\n        loading={{ spinning: this.props.isLoading, indicator: <Spin tip=\"Loading...\"></Spin>, size: \"large\" }}\r\n      ></Table>\r\n    )\r\n  }\r\n}\r\n\r\n","import axios from \"axios\"\r\nimport { IResponseData, IResponseError, ISearchCondition, IResponsePageData } from \"./CommonTypes\";\r\n\r\nexport interface IMovie {\r\n  _id?: string;\r\n  name: string;\r\n  types: string[];\r\n  areas: string[];\r\n  filmLength: number;\r\n  isHot: boolean;\r\n  isComing: boolean;\r\n  isClassics: boolean;\r\n  description?: string;\r\n  poster?: string;\r\n}\r\n\r\nexport class MovieService {\r\n  public static async add(movie: IMovie): Promise<IResponseData<IMovie> | IResponseError> {\r\n    const { data } = await axios.post(\"/api/movie\", movie);\r\n    return data;\r\n  }\r\n\r\n  public static async edit(id: string, movie: Partial<IMovie>): Promise<IResponseData<true> | IResponseError> {\r\n    const { data } = await axios.put(\"/api/movie/\" + id, movie);\r\n    return data;\r\n  }\r\n\r\n  public static async delete(id: string): Promise<IResponseData<true> | IResponseError> {\r\n    const { data } = await axios.delete(\"/api/movie/\" + id);\r\n    return data;\r\n  }\r\n\r\n  public static async getMovieById(id: string): Promise<IResponseData<IMovie | null>> {\r\n    const { data } = await axios.get(\"/api/movie/\" + id);\r\n    return data;\r\n  }\r\n\r\n  public static async getMovies(condition: ISearchCondition): Promise<IResponsePageData<IMovie>> {\r\n    const { data } = await axios.get(\"/api/movie\", {\r\n      params: condition\r\n    })\r\n    return data;\r\n  }\r\n}","// action的创建函数\r\nimport { IActionType } from \"./ActionTypes\";\r\nimport { IMovie, MovieService } from \"../../services/MovieService\";\r\nimport { ISearchCondition, SwitchType } from \"../../services/CommonTypes\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { IRootstate } from \"../reducers/RootReducer\";\r\n\r\nexport type SaveMoviesAction = IActionType<\"movie_save\", {\r\n  movies: IMovie[],\r\n  total: number\r\n}>\r\nfunction saveMoviesAction(movies: IMovie[], total: number): SaveMoviesAction {\r\n  return {\r\n    type: \"movie_save\",\r\n    payload: {\r\n      // 负载的信息\r\n      movies,\r\n      total\r\n    }\r\n  }\r\n}\r\n\r\nexport type SetLoadingAction = IActionType<\"movie_setLoading\", boolean>\r\nfunction setLoadingAction(isLoading: boolean): SetLoadingAction {\r\n  return {\r\n    type: \"movie_setLoading\",\r\n    payload: isLoading\r\n  }\r\n}\r\n\r\nexport type SetConditionAction = IActionType<\"movie_setCondition\", ISearchCondition>\r\nfunction setConditionAction(condition: ISearchCondition): SetConditionAction {\r\n  return {\r\n    type: 'movie_setCondition',\r\n    payload: condition\r\n  }\r\n}\r\n\r\nexport type DeleteAction = IActionType<\"movie_delete\", string>\r\nfunction deleteAction(id: string): DeleteAction {\r\n  return {\r\n    type: \"movie_delete\",\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport type MovieChangeSwitchAction = IActionType<\"movie_switch\", {\r\n  type: SwitchType,\r\n  newVal: boolean,\r\n  id: string\r\n}>\r\nfunction changeSwitchAction(type: SwitchType, newVal: boolean, id: string): MovieChangeSwitchAction {\r\n  return {\r\n    type: \"movie_switch\",\r\n    payload: {\r\n      type,\r\n      newVal,\r\n      id\r\n    }\r\n  }\r\n}\r\n\r\nexport type MovieActions = SaveMoviesAction | SetConditionAction | SetLoadingAction | DeleteAction | MovieChangeSwitchAction;\r\n\r\n// 根据条件从服务器获取电影的数据，ThunkAction的泛型：\r\n// R，函数 的返回类型；\r\n// S，state状态；\r\n// E，传入的额外参数；\r\n// A，action的类型\r\nfunction fetchMovies(condition: ISearchCondition): ThunkAction<Promise<void>, IRootstate, any, MovieActions> {\r\n  return async (dispatch, getState) => {\r\n    // 设置加载状态\r\n    dispatch(setLoadingAction(true));\r\n    // 设置条件\r\n    dispatch(setConditionAction(condition));\r\n    // 获取服务器数据\r\n    const curCondition = getState().movie.condition;\r\n    const resp = await MovieService.getMovies(curCondition);\r\n    // 更改仓库的数据\r\n    dispatch(saveMoviesAction(resp.data, resp.total))\r\n    // 关闭加载状态\r\n    dispatch(setLoadingAction(false));\r\n  }\r\n}\r\n\r\nfunction deleteMovie(id: string)\r\n  : ThunkAction<Promise<void>, IRootstate, any, MovieActions> {\r\n  return async dispatch => {\r\n    dispatch(setLoadingAction(true));\r\n    await MovieService.delete(id);// 删除服务器电影数据\r\n    dispatch(deleteAction(id)); // 删除本地仓库中的数据\r\n    dispatch(setLoadingAction(false));\r\n  }\r\n}\r\n\r\nfunction changeSwitch(type: SwitchType, newVal: boolean, id: string)\r\n  : ThunkAction<Promise<void>, IRootstate, any, MovieActions> {\r\n  return async dispatch => {\r\n    dispatch(changeSwitchAction(type, newVal, id));\r\n    await MovieService.edit(id, {\r\n      [type]: newVal\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  saveMoviesAction,\r\n  setLoadingAction,\r\n  setConditionAction,\r\n  deleteAction,\r\n  fetchMovies,\r\n  deleteMovie,\r\n  changeSwitchAction,\r\n  changeSwitch\r\n}","import React, { Dispatch } from \"react\";\r\nimport MovieTable, { IMovieTableEvents } from \"../../components/MovieTable\";\r\nimport { connect } from \"react-redux\";\r\nimport { IRootstate } from \"../../redux/reducers/RootReducer\";\r\nimport MovieAction from \"../../redux/actions/MovieAction\";\r\n\r\nfunction mapStateToProps(state: IRootstate) {\r\n  return state.movie;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): IMovieTableEvents {\r\n  return {\r\n    onLoad() {\r\n      dispatch(MovieAction.fetchMovies({\r\n        page: 1,\r\n        limit: 6,\r\n        key: \"\"\r\n      }))\r\n    },\r\n    onSwitchChange(type, newState, id) {\r\n      dispatch(MovieAction.changeSwitch(type, newState, id))\r\n    },\r\n    async onDelete(id) {\r\n      await dispatch(MovieAction.deleteMovie(id));\r\n    },\r\n    onChange(newPage) {\r\n      dispatch(MovieAction.fetchMovies({\r\n        page: newPage,\r\n      }))\r\n    },\r\n    onKeyChange(key){\r\n      dispatch(MovieAction.setConditionAction({\r\n        key\r\n      }))\r\n    },\r\n    onSearch(){\r\n      dispatch(MovieAction.fetchMovies({\r\n        page:1\r\n      }))\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n\r\nconst HOC = connect(mapStateToProps, mapDispatchToProps);\r\nconst MovieContanier = HOC(MovieTable);\r\nexport default class extends React.Component {\r\n  render() {\r\n    return (\r\n      <MovieContanier />\r\n    )\r\n  }\r\n}\r\n\r\n// 仓库里面有数据，但没有界面\r\n\r\n","import React from \"react\";\r\nimport { Upload, Icon, message, Modal } from \"antd\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nimport { IResponseData, IResponseError } from \"../services/CommonTypes\";\r\n\r\ninterface IImgUploaderProps {\r\n  value?: string\r\n  onChange?: (imgUrl: string) => void\r\n}\r\n\r\ninterface IImgState {\r\n  showModal: boolean\r\n}\r\n\r\nexport default class extends React.Component<IImgUploaderProps, IImgState> {\r\n  state = {\r\n    showModal: false\r\n  }\r\n  private getUploadContent() {\r\n    if (!this.props.value) {\r\n      return (\r\n        <div>\r\n          <Icon type=\"plus\" />\r\n          <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  private getFileList(): UploadFile[] {\r\n    if (this.props.value) {\r\n      return [\r\n        {\r\n          uid: this.props.value,\r\n          name: this.props.value,\r\n          url: this.props.value\r\n        }\r\n      ]\r\n    }\r\n    return []\r\n  }\r\n\r\n  async handleRequest(p: any) {\r\n    let formData = new FormData();\r\n    formData.append(p.filename, p.file)\r\n    console.log(p)\r\n    // fetch api\r\n    const request = new Request(p.action, {\r\n      method: \"post\",\r\n      body: formData\r\n    });\r\n    const resp: IResponseData<string> | IResponseError = await fetch(request).then(resp => resp.json());\r\n    if (resp.err) {\r\n      message.error(resp.err, 1)\r\n    } else {\r\n      // 触发回调\r\n      if (this.props.onChange) {\r\n        this.props.onChange(resp.data!)\r\n      }\r\n      console.log(resp.data)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal visible={this.state.showModal} footer={null} onCancel={() => {\r\n          this.setState({\r\n            showModal: false\r\n          })\r\n        }}>\r\n          <img alt=\"\" style={{ width: '100%' }} src={this.props.value} />\r\n        </Modal>\r\n        <Upload\r\n          action=\"/api/upload\"\r\n          name=\"imgfile\"\r\n          accept=\".jpg,.png,.gif,.bmp,.jiff\"\r\n          listType=\"picture-card\"\r\n          fileList={this.getFileList()}\r\n          customRequest={this.handleRequest.bind(this)}\r\n          onRemove={() => {\r\n            if (this.props.onChange) {\r\n              this.props.onChange(\"\")\r\n            }\r\n          }}\r\n          onPreview={() => {\r\n            this.setState({\r\n              showModal: true\r\n            })\r\n          }}\r\n        >\r\n          {this.getUploadContent()}\r\n        </Upload>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Form, Input, Button, Checkbox, InputNumber, Switch, message } from \"antd\";\r\nimport { WrappedFormUtils } from \"antd/lib/form/Form\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport ImgUploader from \"./ImgUploader\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\n\r\ninterface IFormProp extends RouteComponentProps {\r\n  form: WrappedFormUtils<any>\r\n  onSubmit: (movie: IMovie) => Promise<string>\r\n  movie?: IMovie\r\n}\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 2\r\n  },\r\n  wrapperCol: {\r\n    span: 22\r\n  },\r\n};\r\n\r\nconst AllAreas: { label: string, value: string }[] = [\r\n  { label: \"中国大陆\", value: \"中国大陆\" },\r\n  { label: \"中国香港\", value: \"中国香港\" },\r\n  { label: \"中国台湾\", value: \"中国台湾\" },\r\n  { label: \"美国\", value: \"美国\" },\r\n  { label: \"日本\", value: \"日本\" },\r\n  { label: \"泰国\", value: \"泰国\" },\r\n  { label: \"印度\", value: \"印度\" },\r\n  { label: \"法国\", value: \"法国\" },\r\n  { label: \"俄罗斯\", value: \"俄罗斯\" },\r\n  { label: \"西班牙\", value: \"西班牙\" },\r\n  { label: \"意大利\", value: \"意大利\" }\r\n]\r\nconst AreaGroup = Checkbox.Group;\r\n\r\nconst AllTypes: { label: string, value: string }[] = [\r\n  { label: \"喜剧\", value: \"喜剧\" },\r\n  { label: \"科幻\", value: \"科幻\" },\r\n  { label: \"战争\", value: \"战争\" },\r\n  { label: \"爱情\", value: \"爱情\" },\r\n  { label: \"灾难\", value: \"灾难\" },\r\n  { label: \"动作\", value: \"动作\" },\r\n  { label: \"恐怖\", value: \"恐怖\" },\r\n  { label: \"奇幻\", value: \"奇幻\" },\r\n  { label: \"伦理\", value: \"伦理\" },\r\n  { label: \"历史\", value: \"历史\" },\r\n  { label: \"悬疑\", value: \"悬疑\" }\r\n]\r\nconst TypeGroup = Checkbox.Group;\r\n\r\n\r\nclass MovieForm extends React.Component<IFormProp> {\r\n\r\n  private handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async errors => {\r\n      if (!errors) {\r\n        const formData = this.props.form.getFieldsValue();\r\n        const result = await this.props.onSubmit(formData as IMovie);\r\n        if (!result) {\r\n          message.success(\"处理成功\", 1, () => {\r\n            // 跳转页面\r\n            this.props.history.push(\"/movie\");\r\n          });\r\n        } else {\r\n          message.error(result);\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form\r\n        onSubmit={this.handleSubmit.bind(this)}\r\n        {...formItemLayout}\r\n      >\r\n        <Form.Item\r\n          label=\"电影名称\"\r\n          labelCol={{ span: 2 }}\r\n          wrapperCol={{ span: 18 }}\r\n        >\r\n          {getFieldDecorator<IMovie>(\"name\", {\r\n            rules: [{ required: true, message: \"请填写电影名称\" }]\r\n          })(\r\n            <Input />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"海报\"\r\n        >\r\n          {getFieldDecorator<IMovie>(\"poster\")(\r\n            <ImgUploader></ImgUploader>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"地区\"\r\n        >\r\n          {getFieldDecorator<IMovie>(\"areas\", {\r\n            rules: [{ required: true, message: \"请选择地区\" }]\r\n          })(\r\n            <AreaGroup options={AllAreas}></AreaGroup>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"类型\"\r\n        >\r\n          {getFieldDecorator<IMovie>(\"types\", {\r\n            rules: [{ required: true, message: \"请选择类型\" }]\r\n          })(\r\n            <TypeGroup options={AllTypes}></TypeGroup>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"时长（分钟）\"\r\n        >\r\n          {getFieldDecorator<IMovie>(\"filmLength\", {\r\n            rules: [{ required: true, message: \"请填写时长\" }]\r\n          })(\r\n            <InputNumber min={1} step={10}></InputNumber>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"正在热映\"\r\n        >\r\n          {getFieldDecorator<IMovie>(\"isHot\", {\r\n            initialValue: false,\r\n            valuePropName: \"checked\"\r\n          })(\r\n            <Switch></Switch>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"即将上映\"\r\n        >\r\n          {getFieldDecorator<IMovie>(\"isComing\", {\r\n            initialValue: false,\r\n            valuePropName: \"checked\"\r\n          })(\r\n            <Switch></Switch>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"经典影片\"\r\n        >\r\n          {getFieldDecorator<IMovie>(\"isClassics\", {\r\n            initialValue: false,\r\n            valuePropName: \"checked\"\r\n          })(\r\n            <Switch></Switch>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"描述\"\r\n        >\r\n          {getFieldDecorator<IMovie>(\"description\")(\r\n            <Input.TextArea></Input.TextArea>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{ span: 20, offset: 2 }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\ntype MovieFields = {\r\n  [P in Exclude<keyof IMovie, \"_id\">]: any\r\n}\r\n\r\nfunction getDefaultField(movie: IMovie):MovieFields {\r\n  const obj:any = {};\r\n  for (const key in movie) {\r\n    obj[key] = Form.createFormField({\r\n      value: movie[key]\r\n    })\r\n  }\r\n  console.log(\"查看\",obj)\r\n  return obj;\r\n}\r\n\r\nexport default withRouter(Form.create<IFormProp>({\r\n  mapPropsToFields: props => {\r\n    if (props.movie) {\r\n      return getDefaultField(props.movie);\r\n    }\r\n\r\n  }\r\n})(MovieForm));","import React from \"react\";\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { MovieService } from \"../../services/MovieService\";\r\n\r\nexport default class extends React.Component {\r\n  render() {\r\n    return (\r\n      <MovieForm onSubmit={async movie=>{\r\n        const resp = await MovieService.add(movie);\r\n        if(resp.data){\r\n          return \"\";\r\n        } else {\r\n          return resp.err;\r\n        }\r\n      }}></MovieForm>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\"; // 引入路由组件属性\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { MovieService, IMovie } from \"../../services/MovieService\";\r\n\r\ninterface IParams {\r\n  id: string\r\n}\r\n\r\ninterface EditPageState {\r\n  movie?: IMovie\r\n}\r\n\r\nexport default class extends React.Component<RouteComponentProps<IParams>, EditPageState> {\r\n  state: EditPageState = {\r\n    movie: undefined\r\n  }\r\n  async componentDidMount() {\r\n    const resp = await MovieService.getMovieById(this.props.match.params.id);\r\n    if (resp.data) {\r\n      this.setState({\r\n        movie: resp.data\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <MovieForm\r\n        movie={this.state.movie}\r\n        onSubmit={async movie => {\r\n          const resp = await MovieService.edit(this.props.match.params.id, movie);\r\n          if (resp.data) {\r\n            return \"\";\r\n          } else {\r\n            return resp.err;\r\n          }\r\n        }}></MovieForm>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport MovieList from \"./Movie/MovieList\";\r\nimport AddMovie from \"./Movie/AddMovie\";\r\nimport EditMovie from \"./Movie/EditMovie\";\r\nimport { Layout, Menu } from \"antd\";\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst _Layout: React.FC = function () {\r\n  // let id = \"A8DHGOQW920JGG1\"\r\n  return (\r\n    <div className=\"container\">\r\n      <Layout>\r\n        <Header>\r\n          <NavLink to=\"/\" className=\"header\">猫眼电影管理系统</NavLink>\r\n        </Header>\r\n        <Layout>\r\n          <Sider>\r\n            <Menu\r\n              mode=\"inline\"\r\n              theme=\"dark\"\r\n            >\r\n              <Menu.Item key=\"1\">\r\n                <NavLink to=\"/movie\">电影列表</NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <NavLink to=\"/movie/add\">添加电影</NavLink>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Content>\r\n            <div className=\"main\">\r\n              <Route path=\"/\" component={Home} exact={true}></Route>\r\n              <Route path=\"/movie\" component={MovieList} exact={true}></Route>\r\n              <Route path=\"/movie/add\" component={AddMovie}></Route>\r\n              <Route path={\"/movie/edit/:id\"} component={EditMovie}></Route>\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default _Layout; ","import { IMovie } from \"../../services/MovieService\";\r\nimport { ISearchCondition } from \"../../services/CommonTypes\";\r\nimport { MovieActions, SaveMoviesAction, SetConditionAction, SetLoadingAction, DeleteAction, MovieChangeSwitchAction } from \"../actions/MovieAction\";\r\nimport { Reducer } from \"react\";\r\n\r\n// 描述电影列表的状态类型\r\n\r\nexport type IMovieCondition = Required<ISearchCondition>\r\n\r\n/**\r\n * 电影状态\r\n */\r\nexport interface IMovieState {\r\n  /**\r\n   * 电影信息数组\r\n   */\r\n  data: IMovie[]\r\n  /**\r\n   * 查询条件\r\n   */\r\n  condition: IMovieCondition\r\n  /**\r\n   * 总记录数\r\n   */\r\n  total: number\r\n  /**\r\n   * 是否正在加载数据\r\n   */\r\n  isLoading: boolean\r\n\r\n  /**\r\n   * 总页数\r\n   */\r\n  totalPage: number\r\n}\r\n\r\nconst defaultState: IMovieState = {\r\n  data: [],\r\n  condition: {\r\n    page: 1,\r\n    limit: 10,\r\n    key: \"\"\r\n  },\r\n  total: 0,\r\n  isLoading: false,\r\n  totalPage: 0\r\n}\r\n\r\ntype MovieReducer<A> = Reducer<IMovieState, A>\r\n\r\nconst saveMovie: MovieReducer<SaveMoviesAction> = function (state, action) {\r\n  return {\r\n    ...state,\r\n    data: action.payload.movies,\r\n    total: action.payload.total,\r\n    totalPage: Math.ceil(action.payload.total / state.condition.limit)\r\n  }\r\n}\r\n\r\nconst setCondition: MovieReducer<SetConditionAction> = function (state, action) {\r\n  const newState = {\r\n    ...state,\r\n    condition: {\r\n      ...state.condition,\r\n      ...action.payload\r\n    }\r\n  };\r\n  // 重新计算总页数\r\n  newState.totalPage = Math.ceil(newState.total / newState.condition.limit);\r\n  return newState;\r\n}\r\n\r\nconst setLoading: MovieReducer<SetLoadingAction> = function (state, action) {\r\n  return {\r\n    ...state,\r\n    isLoading: action.payload\r\n  }\r\n}\r\n\r\nconst deleteMovie: MovieReducer<DeleteAction> = function (state, action) {\r\n  return {\r\n    ...state,\r\n    data: state.data.filter(m => m._id !== action.payload),\r\n    total: state.total - 1,\r\n    totalPage: Math.ceil((state.total - 1) / state.condition.limit)\r\n  }\r\n}\r\n\r\nconst changeSwitch: MovieReducer<MovieChangeSwitchAction> = function (state, action) {\r\n  // action.payload\r\n  // 1.根据id找到对象\r\n  const movie = state.data.find(d => d._id === action.payload.id);\r\n  if (!movie) {\r\n    return state;\r\n  }\r\n  // 2.对象克隆\r\n  const newMovie = { ...movie };\r\n  newMovie[action.payload.type] = action.payload.newVal;\r\n\r\n  // 3.将对象重新放入到数组\r\n  const newData = state.data.map(d => {\r\n    if (d._id === action.payload.id) {\r\n      return newMovie;\r\n    }\r\n    return d;\r\n  })\r\n\r\n  return {\r\n    ...state,\r\n    data: newData\r\n  };\r\n}\r\n\r\nexport default function (state: IMovieState = defaultState, action: MovieActions) {\r\n  // 可辨识联合\r\n  switch (action.type) {\r\n    case \"movie_delete\":\r\n      return deleteMovie(state, action);\r\n    case \"movie_save\":\r\n      return saveMovie(state, action);\r\n    case \"movie_setLoading\":\r\n      return setLoading(state, action);\r\n    case \"movie_setCondition\":\r\n      return setCondition(state, action);\r\n    case \"movie_switch\":\r\n      return changeSwitch(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\"\r\nimport movie, { IMovieState } from \"./MovieReducer\"\r\n\r\n/**\r\n * 整个网站的根状态\r\n */\r\nexport interface IRootstate {\r\n  movie:IMovieState,\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n  movie\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer, IRootstate } from \"./reducers/RootReducer\";\r\nimport logger from \"redux-logger\";\r\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk as ThunkMiddleware<IRootstate>, logger)\r\n);","import React from 'react';\nimport Layout from \"./pages/Layout\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path=\"/\" component={Layout}></Route>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\"\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}